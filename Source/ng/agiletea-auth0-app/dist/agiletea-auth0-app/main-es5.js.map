{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/app/app.component.ts","webpack:///src/app/components/app/app.component.html","webpack:///src/app/components/auth-api/auth-api.component.ts","webpack:///src/app/components/auth-api/auth-api.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AppComponent","title","selector","templateUrl","styleUrls","AuthApiComponent","api","ping$","subscribe","res","responseJson","pingApi","auth","NavBarComponent","ProfileComponent","AuthGuard","next","state","isAuthenticated$","pipe","loggedIn","login","url","providedIn","ApiService","http","get","AuthService","router","auth0Client$","domain","client_id","redirect_uri","window","location","origin","audience","err","client","isAuthenticated","handleRedirectCallback$","handleRedirectCallback","userProfileSubject$","userProfile$","asObservable","localAuthSetup","handleAuthCallback","options","getUser","user","checkAuth$","getUser$","redirectPath","loginWithRedirect","appState","target","params","search","includes","targetRoute","authComplete$","cbRes","navigate","logout","returnTo","getTokenSilently","InterceptorService","getTokenSilently$","token","tokenReq","clone","setHeaders","Authorization","handle","environment","production","bootstrapModule","catch","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthApiComponent } from './components/auth-api/auth-api.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n  {\n    path: 'auth-api',\n    component: AuthApiComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { InterceptorService } from './services/interceptor.service';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'agiletea-auth0-app';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-auth-api',\n  templateUrl: './auth-api.component.html',\n  styleUrls: ['./auth-api.component.sass']\n})\nexport class AuthApiComponent implements OnInit {\n\n  responseJson: string;\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  pingApi() {\n    this.api.ping$().subscribe(\n      res => this.responseJson = res\n    );\n  }\n}\n","<p>auth-api works!</p>\n\n\n<button (click)=\"pingApi()\">Ping API</button>\n\n<pre *ngIf=\"responseJson\">\n<code>{{ responseJson }}</code>\n</pre>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.sass']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}","<header>\n    <button (click)=\"auth.login()\" *ngIf=\"!auth.loggedIn\">Log In</button>\n    <button (click)=\"auth.logout()\" *ngIf=\"auth.loggedIn\">Log Out</button>\n    <a routerLink=\"/\">Home</a>&nbsp;\n    <a routerLink=\"profile\" *ngIf=\"auth.loggedIn\">Profile</a>\n    &nbsp;<a routerLink=\"auth-api\" *ngIf=\"auth.loggedIn\">Auth API</a>\n  </header>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.sass']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}","<pre *ngIf=\"auth.userProfile$ | async as profile\">\n    <code>{{ profile | json }}</code>\n    </pre>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\n    return this.auth.isAuthenticated$.pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          this.auth.login(state.url);\n        }\n      })\n    );\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  ping$(): Observable<any> {\n    return this.http.get('/api/auth');\n  }\n\n}","import { Injectable } from '@angular/core';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // Create an observable of Auth0 instance of client\n  auth0Client$ = (from(\n    createAuth0Client({\n      domain: \"agiletea.eu.auth0.com\",\n      client_id: \"F23CK65R18N86zexJ0DWqrOLwXTzQhLt\",\n      redirect_uri: `${window.location.origin}`,\n      audience: \"http://localhost:8001\"\n    })\n  ) as Observable<Auth0Client>).pipe(\n    shareReplay(1), // Every subscription receives the same shared value\n    catchError(err => throwError(err))\n  );\n  // Define observables for SDK methods that return promises by default\n  // For each Auth0 SDK method, first ensure the client instance is ready\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\n  // from: Convert that resulting promise into an observable\n  isAuthenticated$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\n    tap(res => this.loggedIn = res)\n  );\n  handleRedirectCallback$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n  );\n  // Create subject and public observable of user profile data\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\n  userProfile$ = this.userProfileSubject$.asObservable();\n  // Create a local property for login status\n  loggedIn: boolean = null;\n\n  constructor(private router: Router) {\n    // On initial load, check authentication state with authorization server\n    // Set up local auth streams if user is already authenticated\n    this.localAuthSetup();\n    // Handle redirect from Auth0 login\n    this.handleAuthCallback();\n  }\n\n  // When calling, options can be passed if desired\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\n  getUser$(options?): Observable<any> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getUser(options))),\n      tap(user => this.userProfileSubject$.next(user))\n    );\n  }\n\n  private localAuthSetup() {\n    // This should only be called on app initialization\n    // Set up local authentication streams\n    const checkAuth$ = this.isAuthenticated$.pipe(\n      concatMap((loggedIn: boolean) => {\n        if (loggedIn) {\n          // If authenticated, get user and set in app\n          // NOTE: you could pass options here if needed\n          return this.getUser$();\n        }\n        // If not authenticated, return stream that emits 'false'\n        return of(loggedIn);\n      })\n    );\n    checkAuth$.subscribe();\n  }\n\n  login(redirectPath: string = '/') {\n    // A desired redirect path can be passed to login method\n    // (e.g., from a route guard)\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log in\n      client.loginWithRedirect({\n        redirect_uri: `${window.location.origin}`,\n        appState: { target: redirectPath }\n      });\n    });\n  }\n\n  private handleAuthCallback() {\n    // Call when app reloads after user logs in with Auth0\n    const params = window.location.search;\n    if (params.includes('code=') && params.includes('state=')) {\n      let targetRoute: string; // Path to redirect to after login processsed\n      const authComplete$ = this.handleRedirectCallback$.pipe(\n        // Have client, now call method to handle auth callback redirect\n        tap(cbRes => {\n          // Get and set target redirect route from callback results\n          targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n        }),\n        concatMap(() => {\n          // Redirect callback complete; get user and login status\n          return combineLatest([\n            this.getUser$(),\n            this.isAuthenticated$\n          ]);\n        })\n      );\n      // Subscribe to authentication completion observable\n      // Response will be an array of user and login status\n      authComplete$.subscribe(([user, loggedIn]) => {\n        // Redirect to target route after callback processing\n        this.router.navigate([targetRoute]);\n      });\n    }\n  }\n\n  logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: \"F23CK65R18N86zexJ0DWqrOLwXTzQhLt\",\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n  \n  getTokenSilently$(options?): Observable<string> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { AuthService } from './auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.auth.getTokenSilently$().pipe(\n      mergeMap(token => {\n        const tokenReq = req.clone({\n          setHeaders: { Authorization: `Bearer ${token}` }\n        });\n        return next.handle(tokenReq);\n      }),\n      catchError(err => throwError(err))\n    );\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}