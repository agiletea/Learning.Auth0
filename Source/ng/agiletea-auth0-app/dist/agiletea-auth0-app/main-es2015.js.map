{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/auth-api/auth-api.component.ts","./src/app/components/auth-api/auth-api.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/guards/auth.guard.ts","./src/app/services/api.service.ts","./src/app/services/auth/auth.service.ts","./src/app/services/interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthApiComponent } from './components/auth-api/auth-api.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n  {\n    path: 'auth-api',\n    component: AuthApiComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { InterceptorService } from './services/interceptor.service';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'agiletea-auth0-app';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-auth-api',\n  templateUrl: './auth-api.component.html',\n  styleUrls: ['./auth-api.component.sass']\n})\nexport class AuthApiComponent implements OnInit {\n\n  responseJson: string;\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  pingApi() {\n    this.api.ping$().subscribe(\n      res => this.responseJson = res\n    );\n  }\n}\n","<p>auth-api works!</p>\n\n\n<button (click)=\"pingApi()\">Ping API</button>\n\n<pre *ngIf=\"responseJson\">\n<code>{{ responseJson }}</code>\n</pre>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.sass']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}","<header>\n    <button (click)=\"auth.login()\" *ngIf=\"!auth.loggedIn\">Log In</button>\n    <button (click)=\"auth.logout()\" *ngIf=\"auth.loggedIn\">Log Out</button>\n    <a routerLink=\"/\">Home</a>&nbsp;\n    <a routerLink=\"profile\" *ngIf=\"auth.loggedIn\">Profile</a>\n    &nbsp;<a routerLink=\"auth-api\" *ngIf=\"auth.loggedIn\">Auth API</a>\n  </header>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.sass']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}","<pre *ngIf=\"auth.userProfile$ | async as profile\">\n    <code>{{ profile | json }}</code>\n    </pre>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\n    return this.auth.isAuthenticated$.pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          this.auth.login(state.url);\n        }\n      })\n    );\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  ping$(): Observable<any> {\n    return this.http.get('/api/auth');\n  }\n\n}","import { Injectable } from '@angular/core';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // Create an observable of Auth0 instance of client\n  auth0Client$ = (from(\n    createAuth0Client({\n      domain: \"agiletea.eu.auth0.com\",\n      client_id: \"F23CK65R18N86zexJ0DWqrOLwXTzQhLt\",\n      redirect_uri: `${window.location.origin}`,\n      audience: \"http://localhost:8001\"\n    })\n  ) as Observable<Auth0Client>).pipe(\n    shareReplay(1), // Every subscription receives the same shared value\n    catchError(err => throwError(err))\n  );\n  // Define observables for SDK methods that return promises by default\n  // For each Auth0 SDK method, first ensure the client instance is ready\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\n  // from: Convert that resulting promise into an observable\n  isAuthenticated$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\n    tap(res => this.loggedIn = res)\n  );\n  handleRedirectCallback$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n  );\n  // Create subject and public observable of user profile data\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\n  userProfile$ = this.userProfileSubject$.asObservable();\n  // Create a local property for login status\n  loggedIn: boolean = null;\n\n  constructor(private router: Router) {\n    // On initial load, check authentication state with authorization server\n    // Set up local auth streams if user is already authenticated\n    this.localAuthSetup();\n    // Handle redirect from Auth0 login\n    this.handleAuthCallback();\n  }\n\n  // When calling, options can be passed if desired\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\n  getUser$(options?): Observable<any> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getUser(options))),\n      tap(user => this.userProfileSubject$.next(user))\n    );\n  }\n\n  private localAuthSetup() {\n    // This should only be called on app initialization\n    // Set up local authentication streams\n    const checkAuth$ = this.isAuthenticated$.pipe(\n      concatMap((loggedIn: boolean) => {\n        if (loggedIn) {\n          // If authenticated, get user and set in app\n          // NOTE: you could pass options here if needed\n          return this.getUser$();\n        }\n        // If not authenticated, return stream that emits 'false'\n        return of(loggedIn);\n      })\n    );\n    checkAuth$.subscribe();\n  }\n\n  login(redirectPath: string = '/') {\n    // A desired redirect path can be passed to login method\n    // (e.g., from a route guard)\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log in\n      client.loginWithRedirect({\n        redirect_uri: `${window.location.origin}`,\n        appState: { target: redirectPath }\n      });\n    });\n  }\n\n  private handleAuthCallback() {\n    // Call when app reloads after user logs in with Auth0\n    const params = window.location.search;\n    if (params.includes('code=') && params.includes('state=')) {\n      let targetRoute: string; // Path to redirect to after login processsed\n      const authComplete$ = this.handleRedirectCallback$.pipe(\n        // Have client, now call method to handle auth callback redirect\n        tap(cbRes => {\n          // Get and set target redirect route from callback results\n          targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n        }),\n        concatMap(() => {\n          // Redirect callback complete; get user and login status\n          return combineLatest([\n            this.getUser$(),\n            this.isAuthenticated$\n          ]);\n        })\n      );\n      // Subscribe to authentication completion observable\n      // Response will be an array of user and login status\n      authComplete$.subscribe(([user, loggedIn]) => {\n        // Redirect to target route after callback processing\n        this.router.navigate([targetRoute]);\n      });\n    }\n  }\n\n  logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: \"F23CK65R18N86zexJ0DWqrOLwXTzQhLt\",\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n  \n  getTokenSilently$(options?): Observable<string> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { AuthService } from './auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.auth.getTokenSilently$().pipe(\n      mergeMap(token => {\n        const tokenReq = req.clone({\n          setHeaders: { Authorization: `Bearer ${token}` }\n        });\n        return next.handle(tokenReq);\n      }),\n      catchError(err => throwError(err))\n    );\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}